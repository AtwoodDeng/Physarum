// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel InitParticle
#define PARTICLE_THREAD_NUM 32 
#define REPEAT_TIME 20

#include "../../Shader/Common.cginc"

RWStructuredBuffer<ParticleInfo> ParticleInfoBuffer;
RWTexture2D<float4> InitTexture;

float _Size;

int _InitType;

[numthreads(PARTICLE_THREAD_NUM,1,1)]
void InitParticle(uint3 id : SV_DispatchThreadID)
{

    if ( _InitType == 0 ) // random in cube
    {
       ParticleInfoBuffer[id.x].pos = rand3(id.x ) * 2 * _Size - float3(1,1,1) * _Size ;

       float2 randVelSample = rand2(id.x * 2);
       ParticleInfoBuffer[id.x].vel = rand_sphere( randVelSample.x , randVelSample.y , 1.0 );
    }else if ( _InitType == 1 ) { // random in sphere 
       float3 randPosSample = rand3(id.x);
       ParticleInfoBuffer[id.x].pos = rand_sphere( randPosSample.x , randPosSample.y , randPosSample.z * _Size * 0.5 ) ;

       float2 randVelSample = rand2(id.x * 2.0);
       ParticleInfoBuffer[id.x].vel = rand_sphere( randVelSample.x , randVelSample.y , 1.0 );
    }

}
 